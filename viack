#!/usr/bin/env perl
use strict;
use warnings;
use open qw/ :std :encoding(UTF-8) /;

use File::Basename qw(basename);
use File::Temp qw(tempfile);

my ($pattern, $grabnext, @vimopts, @hits);

# Extract the ack pattern to use when spawning vim
for (@ARGV) {
    if ($grabnext or not /^-/) {
        $pattern = $_;

        # Try to make vim's magic mode more like Perl's standard regexes
        # Magic chars gleaned from :help magic, and the most common problem
        # characters are < and >
        my $vimpat = $pattern;
           $vimpat =~ s{([<>=@!%/&])}{\\$1}g;
           $vimpat =~ s{(^|(?<=[^\\]))\\b}{\\W\\@=}g; # translate Perl's \b to \W\@= for vim

           # Translate Perl's lookaheads and lookbehinds for vim:
           #    (?=...) and (?!...) to (...)@= and (...)@!
           #
           # It's a little uglier because this is after escaping metachars
           # above.  The matching of the actual pattern part will fail if it
           # contains a ) in the middle as .+? is non-greedy and we're not
           # doing balanced matching.  It's better to fail this way than to
           # fail by gobbling up too much.
           $vimpat =~ s{\(\?(?:\\(<?))?(?:\\([=!]))(.+?)\)}{($3)\@$1$2}g;

           # Translate the two most common non-greedy modifiers in Perl to Vim.
           $vimpat =~ s/\Q*?/{-}/g;
           $vimpat =~ s/\Q+?/{-1,}/g;

           # see http://code.google.com/p/re2/wiki/Syntax
        push @vimopts, '+1', '+/\v'.$vimpat;
        last;
    }
    elsif (/^--$/) {
        $grabnext = 1;
    }
}

# Capture output without dealing with shell escaping
my $pid = open my $kid, "-|";
die "Can't fork: $!" unless defined $pid;

if ($pid) {
    @hits = <$kid>;
    chomp for @hits;
    close $kid;
} else {
    my ($via_git, $invoked_as) = basename($0) =~ /^(git-)?vi(.+)/;
    my $grep = ($via_git ? "git" : $ENV{VIACK_GREP}) || $invoked_as || 'ack';
    my @opts;

    if ($via_git) {
        # invoked as git-viack so use git grep
        @opts = ("grep", "-HI", "--perl-regexp");

        # Emulate smartcase (poorly)
        push @opts, "-i" if $pattern eq lc $pattern;
    } elsif ($grep eq "grep") {
        @opts = ("-rHIP", "--color=never", "--line-number");
        @ARGV = (".") unless @ARGV;

        # Emulate smartcase (poorly)
        push @opts, "-i" if $pattern eq lc $pattern;
    } else {
        # ack and ag default to line numbers and headings
        @opts = qw( --noheading --nobreak --nocolor );
    }

    exec $grep => @opts, @ARGV
        or die "Can't exec $grep: $!";
}

if (@hits) {
    my ($tmpfh, $tmpfn) = tempfile( "viack-XXXXX", TMPDIR => 1 );
    binmode $tmpfh, ":encoding(UTF-8)";
    print { $tmpfh } "$_\n" for @hits;
    close $tmpfh;

    my %seen;
    my @files = grep { not $seen{$_}++ } map { /^(.+?):\d/; $1 } @hits;

    exec "vim", @vimopts, "+set errorformat=%f:%l:%m", "+cfile $tmpfn", "--", @files
        or die "Can't exec vim. $!";
} else {
    die "No matches to open.\n";
}
